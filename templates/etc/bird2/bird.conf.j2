# ansible managed
log syslog { warning, error, auth, fatal, bug };
timeformat protocol iso long;

include "/etc/bird/bird_this_host*.conf";

router id {{ bird.routerid | default(ansible_default_ipv4.address) }};

function ip_local4 () -> ip {
  return {{ bird.routerid | default(ansible_default_ipv4.address) }};
}
function ip_local6 () -> ip {
  return {{ bird.ipv6_local }};
}


template bgp t_bgp_local {
  local as {{ bird.as }};
}
function defaultroute4() -> bool {
  return net ~ [ 0.0.0.0/0 ];
}
function defaultroute6() -> bool {
  return net ~ [ ::/0 ];
}
#function net_cix() {
#  # CIX networks, don't export
#  # return net ~ [ 100.100.0.0/16+ ];
#  return false;
#}
function net_martian4() -> bool {
  return net ~ [ 0.0.0.0/8, 10.0.0.0/8+, 100.64.0.0/10+, 127.0.0.0/8+, 169.254.0.0/16+, 172.16.0.0/12+,
    192.0.0.0/24+, 192.0.2.0/24+, 192.168.0.0/16+, 198.18.0.0/15+, 198.51.100.0/24+, 203.0.113.0/24+, 224.0.0.0/3+ ];
}
function net_martian6() -> bool {
# check https://6session.wordpress.com/2009/04/08/ipv6-martian-and-bogon-filters/
  if net ~ [ ::/96+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::/128+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::1/128+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::ffff:0000:0000/96+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::df00:0000/104+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::7f00:0000/104+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::0000:0000/104+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ::ff00:0000/104+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 0000::/8+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 0200::/7+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 3ffe::/16+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2001:db8::/32+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:e000::/20+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:7f00::/24+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:0000::/24+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:ff00::/24+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:ff00::/24+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:0a00::/24+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:ac10::/28+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ 2002:c0a8::/32+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ fc00::/7+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ fe80::/10+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ fec0::/10+ ] then { print "Reject ", net, " martian"; return true; }
  if net ~ [ ff00::/8+ ] then { print "Reject ", net, " martian"; return true; }

  return false;
}

filter nodefaultroute {
  if net ~ [ 0.0.0.0/0 ] then reject;
  else accept;
}

include "/etc/bird/bird_tables_*.conf";
include "/etc/bird/bird_functions_*.conf";
{% if bird.filters.bgprouting is not defined %}
filter bgprouting {
  krt_metric = 100;       
  if net = 0.0.0.0/0 then reject;
  if net ~ [ 10.0.0.0/8+ ] then accept;
  if net ~ [ 172.16.0.0/12+ ] then accept;
  if net ~ [ 192.168.0.0/16+ ] then accept;
  reject;
}
{% endif %}
include "/etc/bird/bird_templates_*.conf";

protocol device {
  scan time {{ bird.scantime | default('10') }};           # Scan interfaces every {{ bird.scantime | default('10') }} seconds
}

protocol static static_blackhole4 {
  ipv4;
{% for i in lihas_bird_static_blackhole4 %}
  {{ i }}
{% endfor %}
}
protocol static static_blackhole6 {
  ipv6;
{% for i in lihas_bird_static_blackhole6 %}
  {{ i }}
{% endfor %}
}

{% if bird_kernelmain | default('true') %}
protocol kernel kernel6{
  persist;
  scan time {{ bird.scantime | default('10') }};
  metric 2000;
  ipv6 {
    import none;
    export filter { krt_prefsrc = ip_local6(); accept; };
  };
}
protocol kernel kernel4 {
  persist;
  scan time {{ bird.scantime | default('10') }};
  metric 2000;
  ipv4 {
    import none;
    export filter { krt_prefsrc = ip_local4(); accept; };
  };
}
{% endif %}
include "/etc/bird/bird_standortvernetzung*.conf";
include "/etc/bird/bird_filters_*.conf";
include "/etc/bird/bird_protocols_*.conf";

include "/etc/bird/bird_this_location*.conf";
